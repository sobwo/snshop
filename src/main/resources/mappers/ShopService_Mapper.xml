<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myteam.myapp.persistance.ShopService_Mapper">
	<sql id="resultGoodsNo">
		<choose>
			<when test="list.size==0">
				where a.goodsNo in (0)
			</when>
			<when test="list.size!=0">
				where a.goodsNo in 
				<foreach collection="list" item="item" separator="," open="(" close=")">
					#{item}
				</foreach>
			</when>
		</choose>
	</sql>
	<sql id="searchCategory">
		<choose>
			<when test="value==0">
			
			</when>
			<when test="value==1">
				AND (goods.category in
				<foreach collection="filter" item="item" separator="," open="(" close=")">
					#{item}
				</foreach>
				or goods.categoryName in
				<foreach collection="filter" item="item" separator="," open="(" close=")">
					#{item}
				</foreach>
				or goods.goodsgender in
				<foreach collection="filter" item="item" separator="," open="(" close=")">
					#{item}
				</foreach>
				or size.sizeName in
				<foreach collection="filter" item="item" separator="," open="(" close=")">
					#{item}
				</foreach>
				)
			</when>
		</choose>
	</sql>
	<sql id="priceValue">
		<choose>
			<when test="price == null">
			
			</when>
			<when test="price != null">
				and goods.price >= #{price}
			</when>
		</choose>
	</sql>
	<sql id="align">
			<choose>
				<when test="align == null">
					order by a.goodsNo desc
				</when>
				<when test="align == 0">
					order by a.goodsNo desc 
				</when>
				<when test="align == 1">
					order by a.price desc
				</when>
				<when test="align == 2">
					order by a.price asc
				</when>
				<when test="align == 3">
					order by a.interestNum desc
				</when>
				<when test="align == 4">
					order by a.goodsNo desc 
				</when>
			</choose>
	</sql>
	<sql id="setInterest">
		<choose>
			<when test="value==1">
				set interestNum = interestNum + 1
			</when>
			<when test="value==2">
				set interestNum = interestNum - 1
			</when>
		</choose>
	</sql>
	<sql id="moreNum">
		<if test="more ==null">
		
		</if>
		
		<if test ="more !=null">
			limit 0 , #{more}
		</if>
	</sql>
	
	<select id="goodsTotal" parameterType="hashMap" resultType = "int">
		SELECT COUNT(DISTINCT goods.goodsNo)
		FROM goods
		INNER JOIN size ON goods.goodsNo = size.goodsNo
<!-- 		INNER JOIN productImg ON goods.goodsNo = productImg.goodsNo -->
		INNER JOIN inventory ON goods.goodsNo = inventory.goodsNo
		WHERE inventory.quantity > 0
		<include refid="searchCategory" />
		and goods.price >= #{price}
	</select>
	
	<select id="goodsSelectAll" resultType="pd">
		select * from goods
	</select>
	
	<select id="trandList" resultType="pd">
		select c.categoryname, sum(cnt)as total from(
			select categoryname, COUNT(interestNum)as cnt from goods group by categoryName
			union 
			select categoryname , count(categoryName)as cnt from orders a left join goods b on a.goodsNo = b.goodsNo group by categoryName
		) c group by c.categoryname
		
		order by total desc limit 8
	</select>
	
	<select id="trandImgList" resultType="pd">
	select min(goodsNo),productImg from goods where categoryname in(
	select c.categoryname from(
		select categoryname, COUNT(interestNum)as cnt from goods group by categoryName
		union 
		select categoryname , count(categoryName)as cnt from orders a left join goods b on a.goodsNo = b.goodsNo group by categoryName
	) c group by c.categoryname
	order by sum(cnt) desc
	) group by categoryname limit 8
	
	</select>
	
	<select id="goodsSelectOne" parameterType="int" resultType="gv">
		select * from goods where goodsNo = #{goodsNo}
	</select>

	<select id="imgSelectOne" parameterType="int" resultType="piv">
		select * from productImg where goodsNo = #{goodsNo} order by imgNo asc
	</select>
	
	<select id="filterList" parameterType="map" resultType="pd">
		SELECT a.*, c.memberNo as interestMemberNo, c.checkM
		FROM goods a
		LEFT JOIN (
		    SELECT *
		    FROM interest
		    WHERE interestNo IN (SELECT MIN(interestNo) FROM interest where memberNo = #{memberNo} GROUP BY goodsNo)
		) c ON a.goodsNo = c.goodsNo
		<include refid="resultGoodsNo" />
		<include refid="align" /> 
	</select>
	
	<select id="searchResult" parameterType="hashMap" resultType="int">
		SELECT distinct(goods.goodsNo),goods.price,goods.interestNum
		FROM goods
		INNER JOIN size ON goods.goodsNo = size.goodsNo
<!-- 		INNER JOIN productImg ON goods.goodsNo = productImg.goodsNo -->
		INNER JOIN inventory ON goods.goodsNo = inventory.goodsNo
		where inventory.quantity > 0
		<include refid="searchCategory" />
		<include refid="priceValue" />
		limit 0 ,#{page}
	</select>
	
	<select id="sellSelect" parameterType="int" resultType="pd">
		select * from goods 
		where goodsNo=#{goodsNo}
	</select>
	
	<select id="shopReviewList" parameterType="hashMap" resultType="ld">
		SELECT * FROM board a LEFT JOIN member b ON a.memberNo = b.memberNo
		WHERE a.boardNo IN (SELECT boardNo FROM connect WHERE goodsNo = #{goodsNo}) 
		<include refid="moreNum" />
	</select>
	
	<select id="ReviewTotal" parameterType="int" resultType="int">
		SELECT count(*) FROM board a LEFT JOIN member b ON a.memberNo = b.memberNo
		WHERE a.boardNo IN (SELECT boardNo FROM connect WHERE goodsNo = #{goodsNo})
	</select> 
	
	<select id="recommentList" parameterType="hashMap" resultType="pd">
		select * from goods a left join inventory b on a.goodsNo = b.goodsNo
		where a.categoryname = '스니커즈' and a.goodsNo not in(3) and b.quantity >0
		order by a.interestNum desc limit 10
	</select>
	
	<update id="goodsDelete" parameterType="int">
		UPDATE inventory SET quantity = 0 where goodsNo = #{goodsNo}
	</update>
	
	<select id="sizeList" parameterType="int" resultType="sd">
		SELECT *
		FROM size s
		LEFT JOIN interest i ON s.sizeNo = i.sizeNo AND (i.memberNo = #{0} OR i.memberNo IS NULL)
		WHERE s.goodsNo = #{1};
	</select>
	
	<select id="sizeListAll" parameterType="Integer" resultType="sd">
		select * from size where goodsNo = #{0}
	</select>
	
	<!-- interest -->
	<select id="interestListCnt" parameterType="iv" resultType="Integer">
		select count(*) from interest where sizeNo = #{sizeNo} and goodsNo = #{goodsNo} and memberNo = #{memberNo}
	</select>
	
	<insert id="insertInterest" parameterType="iv">
		insert into interest(memberNo,sizeNo,goodsNo) values(#{memberNo},#{sizeNo},#{goodsNo})
	</insert>

	<update id="updateInterest" parameterType="iv">
		update interest set interestCheck = (CASE interestCheck WHEN 0 THEN 1 ELSE 0 END) 
		where memberNo=#{memberNo} and sizeNo = #{sizeNo} and goodsNo = #{goodsNo}
	</update>
	
	<update id="updateGoodsInterest" parameterType="iv">
		update goods set interestNum = (select count(*) from interest where goodsNo = #{goodsNo} and interestCheck = 1) where goodsNo = #{goodsNo}
	</update>
	
	<select id="interestCheck" parameterType="iv" resultType="Integer">
		select interestCheck from interest where memberNo=#{memberNo} and sizeNo = #{sizeNo} and goodsNo = #{goodsNo}
	</select>
	
	<select id="interestGoodsCheck" parameterType="Integer" resultType="Integer">
		select count(interestCheck) from interest where memberNo=#{1} and goodsNo = #{0} and interestCheck = 1
	</select>
	
	<select id="selectInterestAll" parameterType="Integer" resultType="gid">
		select * from interest a inner join goods b on a.goodsNo = b.goodsNo inner join size c on a.sizeNo = c.sizeNo 
		where a.interestCheck = 1 and a.memberNo = #{0}
	</select>
	<update id="interestCancel" parameterType="Integer">
		update interest set interestCheck = 0 where memberNo=#{0} and goodsNo = #{1}
	</update>
	
	<update id="plusCheckM" parameterType="iv">
		update interest set checkM = 1
		where goodsNo = #{goodsNo} and memberNo = #{memberNo}
	</update>
	
	<update id="minusCheckM" parameterType="iv">
		update interest set checkM = 0 
		where goodsNo = #{goodsNo} and memberNo = #{memberNo}
	</update>
	
	<select id="selectCheckM" parameterType="iv" resultType="Integer">
		select count(interestCheck) from interest where goodsNo = #{goodsNo} and memberNo = #{memberNo} and interestCheck = 0
	</select>
	
	<select id="countInterest" parameterType="iv" resultType="Integer">
		select count(interestCheck) from interest where goodsNo = #{goodsNo} and memberNo = #{memberNo}
	</select>
	
	<insert id="goodsInsert" parameterType="gv">
		insert into goods(goodsName,goodsBrandName,goodsEng,modelNum,color,category,categoryName,goodsGender,price,memberNo,productImg)
		values(#{goodsName},#{goodsBrandName},#{goodsEng},#{modelNum},#{color},#{category},#{categoryName},#{goodsGender},#{price},#{memberNo},#{productImg})
	</insert>
	<select id="goodsNoSelect" parameterType="Integer" resultType="Integer">
		SELECT * FROM goods where memberNo = #{0} ORDER BY goodsNo DESC LIMIT 1
	</select>
	<insert id="sizeInsert" parameterType="sv">
		insert into size(sizeName,goodsNo) values(#{sizeName},#{goodsNo})
	</insert>
	<select id="sizeNoSelect" parameterType="sv" resultType="Integer">
		select sizeNo from size where goodsNo = #{goodsNo} and sizeName = #{sizeName}
	</select>
	<select id="inventoryCheck" parameterType="iv" resultType="Integer">
		select count(*) from inventory where sizeNo = #{sizeNo} and goodsNo = #{goodsNo}
	</select>
	<insert id="inventoryInsert" parameterType="iv">
		insert into inventory(quantity,sizeNo,goodsNo)
		values(#{quantity},#{sizeNo},#{goodsNo})
	</insert>
	<update id="inventoryUpdate" parameterType="iv">
		update inventory set quantity=quantity+1 where sizeNo=#{sizeNo} and goodsNo=#{goodsNo}
	</update>
</mapper>