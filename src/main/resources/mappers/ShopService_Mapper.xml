<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myteam.myapp.persistance.ShopService_Mapper">
	<sql id="resultGoodsNo">
		<choose>
			<when test="list.size==0">
				where a.goodsNo in (0)
			</when>
			<when test="list.size!=0">
				where a.goodsNo in 
				<foreach collection="list" item="item" separator="," open="(" close=")">
					#{item}
				</foreach>
			</when>
		</choose>
	</sql>
	<sql id="searchCategory">
		<choose>
			<when test="value==0">
			
			</when>
			<when test="value==1">
				AND (goods.category in
				<foreach collection="filter" item="item" separator="," open="(" close=")">
					#{item}
				</foreach>
				or goods.categoryName in
				<foreach collection="filter" item="item" separator="," open="(" close=")">
					#{item}
				</foreach>
				or goods.goodsgender in
				<foreach collection="filter" item="item" separator="," open="(" close=")">
					#{item}
				</foreach>
				or size.sizeName in
				<foreach collection="filter" item="item" separator="," open="(" close=")">
					#{item}
				</foreach>
				)
			</when>
		</choose>
	</sql>
	<sql id="priceValue">
		<choose>
			<when test="price == null">
			
			</when>
			<when test="price != null">
				and goods.price >= #{price}
			</when>
		</choose>
	</sql>
	<sql id="align">
			<choose>
				<when test="align == null">
					order by a.goodsNo desc
				</when>
				<when test="align == 0">
					order by a.goodsNo desc 
				</when>
				<when test="align == 1">
					order by a.price desc
				</when>
				<when test="align == 2">
					order by a.price asc
				</when>
				<when test="align == 3">
					order by a.interestNum desc
				</when>
				<when test="align == 4">
					order by a.goodsNo desc 
				</when>
			</choose>
	</sql>
	<sql id="setInterest">
		<choose>
			<when test="value==1">
				set interestNum = interestNum + 1
			</when>
			<when test="value==2">
				set interestNum = interestNum - 1
			</when>
		</choose>
	</sql>
	<select id="goodsTotal" parameterType="hashMap" resultType = "int">
		SELECT COUNT(DISTINCT goods.goodsNo)
		FROM goods
		INNER JOIN size ON goods.goodsNo = size.goodsNo
<!-- 		INNER JOIN productImg ON goods.goodsNo = productImg.goodsNo -->
		INNER JOIN inventory ON goods.goodsNo = inventory.goodsNo
		WHERE inventory.quantity > 0
		<include refid="searchCategory" />
		and goods.price >= #{price}
	</select>
	<select id="goodsSelectAll" resultType="pd">
		select * from goods a inner join productImg b on a.goodsNo = b.goodsNo
		where b.goodsNo IN (select goodsNo from productImg group by goodsNo having imgNo=min(imgNo)) order by a.goodsNo desc
	</select>
	
	<select id="trandList" resultType="pd">
		SELECT a.categoryName, SUM(a.interestNum + IFNULL(c.cntnum, 0)) AS cnt, MIN(b.imgfileName)
		FROM goods a
		INNER JOIN productImg b ON a.goodsNo = b.goodsNo
		LEFT JOIN (
		    SELECT goodsNo, COUNT(goodsNo) AS cntnum
		    FROM orders
		    GROUP BY goodsNo
		) c ON a.goodsNo = c.goodsNo
		WHERE b.goodsNo IN (
		    SELECT goodsNo
		    FROM productImg
		    GROUP BY goodsNo
		    HAVING imgNo = MIN(imgNo)
		)
		GROUP BY a.categoryName
		ORDER BY cnt DESC;
	</select>
	
	<select id="goodsSelectOne" parameterType="int" resultType="gv">
		select * from goods where goodsNo = #{goodsNo}
	</select>

	<select id="imgSelectOne" parameterType="int" resultType="piv">
		select * from productImg where goodsNo = #{goodsNo} order by imgNo asc
	</select>
	
	<select id="filterList" parameterType="map" resultType="pd">
		SELECT a.*, c.memberNo as interestMemberNo, c.checkM
		FROM goods a
		LEFT JOIN (
		    SELECT *
		    FROM interest
		    WHERE interestNo IN (SELECT MIN(interestNo) FROM interest where memberNo = #{memberNo} GROUP BY goodsNo)
		) c ON a.goodsNo = c.goodsNo
		<include refid="resultGoodsNo" />
		<include refid="align" /> 
	</select>
	
	<select id="searchResult" parameterType="hashMap" resultType="int">
		SELECT distinct(goods.goodsNo),goods.price,goods.interestNum
		FROM goods
		INNER JOIN size ON goods.goodsNo = size.goodsNo
<!-- 		INNER JOIN productImg ON goods.goodsNo = productImg.goodsNo -->
		INNER JOIN inventory ON goods.goodsNo = inventory.goodsNo
		where inventory.quantity > 0
		<include refid="searchCategory" />
		<include refid="priceValue" />
		limit 0 ,#{page}
	</select>
	
	<select id="sellSelect" parameterType="int" resultType="pd">
		select * from goods a inner join productImg b on a.goodsNo = b.goodsNo
		where b.goodsNo IN (select goodsNo from productImg group by goodsNo having imgNo=min(imgNo)) 
		and a.goodsNo=#{goodsNo}
	</select>
	
	<select id="shopReviewList" parameterType="int" resultType="ld">
		select * from board where boardNo in (select boardNo from connect where goodsNo = #{goodsNo})
	</select>
	
	<select id="recommentList" parameterType="hashMap" resultType="pd">
		
		select * from goods a inner join productImg b on a.goodsNo = b.goodsNo
		where b.goodsNo IN (select goodsNo from productImg group by goodsNo having imgNo=min(imgNo))
		and categoryname = #{categoryName} and a.goodsNo not in(#{goodsNo}) order by a.interestNum desc limit 10
	
	</select>
	
	<select id="sizeList" parameterType="int" resultType="sd">
		SELECT *
		FROM size s
		LEFT JOIN interest i ON s.sizeNo = i.sizeNo AND (i.memberNo = #{0} OR i.memberNo IS NULL)
		WHERE s.goodsNo = #{1};
	</select>
	
	<select id="sizeListAll" parameterType="Integer" resultType="sd">
		select * from size where goodsNo = #{0}
	</select>
	
	<!-- interest -->
	<select id="interestListCnt" parameterType="iv" resultType="Integer">
		select count(*) from interest where sizeNo = #{sizeNo} and goodsNo = #{goodsNo} and memberNo = #{memberNo}
	</select>
	
	<insert id="insertInterest" parameterType="iv">
		insert into interest(memberNo,sizeNo,goodsNo) values(#{memberNo},#{sizeNo},#{goodsNo})
	</insert>

	<update id="updateInterest" parameterType="iv">
		update interest set interestCheck = (CASE interestCheck WHEN 0 THEN 1 ELSE 0 END) 
		where memberNo=#{memberNo} and sizeNo = #{sizeNo} and goodsNo = #{goodsNo}
	</update>
	
	<update id="updateGoodsInterest" parameterType="iv">
		update goods set interestNum = (select count(*) from interest where goodsNo = #{goodsNo} and interestCheck = 1) where goodsNo = #{goodsNo}
	</update>
	
	<select id="interestCheck" parameterType="iv" resultType="Integer">
		select interestCheck from interest where memberNo=#{memberNo} and sizeNo = #{sizeNo} and goodsNo = #{goodsNo}
	</select>
	
	<select id="interestGoodsCheck" parameterType="Integer" resultType="Integer">
		select count(interestCheck) from interest where memberNo=#{1} and goodsNo = #{0} and interestCheck = 1
	</select>
	
	<select id="selectInterestAll" parameterType="Integer" resultType="gid">
		select * from interest a inner join goods b on a.goodsNo = b.goodsNo inner join size c on a.sizeNo = c.sizeNo 
		where a.interestCheck = 1 and a.memberNo = #{0}
	</select>
	<update id="interestCancel" parameterType="Integer">
		update interest set interestCheck = 0 where memberNo=#{0} and goodsNo = #{1}
	</update>
	
	<update id="plusCheckM" parameterType="iv">
		update interest set checkM = 1
		where goodsNo = #{goodsNo} and memberNo = #{memberNo}
	</update>
	
	<update id="minusCheckM" parameterType="iv">
		update interest set checkM = 0 
		where goodsNo = #{goodsNo} and memberNo = #{memberNo}
	</update>
	
	<select id="selectCheckM" parameterType="iv" resultType="Integer">
		select count(interestCheck) from interest where goodsNo = #{goodsNo} and memberNo = #{memberNo} and interestCheck = 0
	</select>
	
	<select id="countInterest" parameterType="iv" resultType="Integer">
		select count(interestCheck) from interest where goodsNo = #{goodsNo} and memberNo = #{memberNo}
	</select>
	
	<insert id="goodsInsert" parameterType="gv">
		insert into goods(goodsName,goodsEng,modelNum,category,categoryName,goodsGender,price,memberNo,productImg)
		values(#{goodsName},#{goodsEng},#{modelNum},#{category},#{categoryName},#{goodsGender},#{price},#{memberNo},#{imgFileName})
	</insert>
	<select id="goodsNoSelect" parameterType="Integer" resultType="Integer">
		SELECT * FROM goods where memberNo = #{0} ORDER BY goodsNo DESC LIMIT 1
	</select>
	<insert id="sizeInsert" parameterType="sv">
		insert into size(sizeName,goodsNo) values(#{sizeName},#{goodsNo})
	</insert>
	<select id="sizeNoSelect" parameterType="sv" resultType="Integer">
		select sizeNo from size where goodsNo = #{goodsNo} and sizeName = #{sizeName}
	</select>
	<select id="inventoryCheck" parameterType="iv" resultType="Integer">
		select count(*) from inventory where sizeNo = #{sizeNo} and goodsNo = #{goodsNo}
	</select>
	<insert id="inventoryInsert" parameterType="iv">
		insert into inventory(quantity,sizeNo,goodsNo)
		values(#{quantity},#{sizeNo},#{goodsNo})
	</insert>
	<update id="inventoryUpdate" parameterType="iv">
		update inventory set quantity=quantity+1 where sizeNo=#{sizeNo} and goodsNo=#{goodsNo}
	</update>
</mapper>